// import * as readlineSync from "readline-sync"; 

// - - - - - - - - - - Modulo 3 - - - - - - - - - -
// console.log("Modulo 3");
// console.log("\n");

// Actividad 1 - El pizarrón
// Solicitar al usuario un (1) un número y un (1) texto. 
// Efectuar una salida por alerta con el mensaje ingresado por cada repetición, hasta alcanzar el valor señalado por el usuario.
// console.log("Actividad 1 - El Pizzarón");

// const validateStringInput = (): string => {
//   let input:string;
  
//   do
//   {
//     input = readlineSync.question("Ingrese un texto: ");
  
//     if(input.trim() == "") {
//       console.log("Ingrese un texto.");
//     }
//   } while(input.trim() == "");

//   return input;
// }

// const validateNumberInput = (): number => {
//   let inputNumber:string;
//   let inputNumberValue: number;

//   do
//   {
//     inputNumber = readlineSync.question("Ingrese un número: ");
//     inputNumberValue = parseInt(inputNumber);
  
//     if(inputNumber.trim() == "" || inputNumberValue < 0 || isNaN(inputNumberValue)){
//       console.log("Por favor ingresa un valor mayor 0.");
//     }
//   } while (inputNumber.trim() == "" || inputNumberValue < 0 || isNaN(inputNumberValue));

//   return inputNumberValue;
// }

// let txt: string = validateStringInput();
// let number: number = validateNumberInput();

// console.log("\n");

// for (let i = 0; i < number; i++) {
//   console.log(txt);
// }

// Actividad 2 - El Cuadrado Ordinario
// Solicitar al usuario un (1) número. Emplear este valor para determinar la cantidad de repeticiones, y efectuar una salida por alerta con el mensaje “lado” en cada repetición. 
// Pero si se alcanza un número de iteraciones mayor que cuatro (4), cancelar el ciclo.
// console.log("Actividad 2 - El Cuaderno Ordinario");
// const validateNumber = (): number => {
//   let input: string;
//   let inputValue: number;

//   do 
//   {
//     input = readlineSync.question("Ingrese un numero: ");
//     inputValue = parseInt(input);

//     if (input.trim() == "" || isNaN(inputValue) || inputValue < 1)
//     {
//       console.log("Porfavor ingrese un valor valido (valor numerico).");
//       console.log("\n");
//     }
//   } while (input.trim() == "" || isNaN(inputValue) || inputValue < 1);

//   return inputValue;
// }

// let number1: number = validateNumber();

// for (let i = 1; i < number1; i++) {
//   if (i >= 4) {
//     break;
//   }
//   console.log(`Lado ${i}`);  
// }

// Actividad 3 - Registro de Alumnos
// Solicitar al usuario la carga de diez (10) alumnos de forma consecutiva. Luego realizar un única salida por alerta, con el listado de alumnos registrados.
// console.log("Actividad 3 - Registro de Alumnos");
// const validateStudent = (): string => {
//   let input: string;

//   do{
//     input = readlineSync.question("Ingrese el nombre del alumno: ");

//     if(input.trim() == "" || !isNaN(parseInt(input))) {
//       console.log("Por favor ingrese el nombre del alumno correctamente.");
//     }
//   } while (input.trim() == "" || !isNaN(parseInt(input)));

//   return input;
// }

// let listStudents: string[] = []; 
// let carryStudent: string;

// for (let i = 0; i < 2; i++) {
//   carryStudent = validateStudent();
//   listStudents.push(carryStudent);
// }

// console.log(listStudents);

// Actividad 4 - El Innombrable
// Solicitar al usuario la carga de nombres de forma consecutiva, hasta que se ingrese “Voldemort”. Luego realizar un única salida por alerta, con todos los nombres ingresados.
// // console.log("Actividad 4 - El Innombrable");
// const validateName = (): string => {
//   let input: string;

//   do{
//     input = readlineSync.question("Ingrese un nombre (si desea finalizar ingrese Voldemort): ").toLowerCase();

//     if(input.trim() == "" || !isNaN(parseInt(input))) {
//       console.log("Por favor ingrese un nombre correctamente o ingresa 'Voldemort' para finalizar.");
//     }
//   } while (input.trim() == "" || !isNaN(parseInt(input)));

//   return input;
// }


// let listNames: string[] = [];
// let input: string;
// const voldemort: string = "voldemort";

// input = validateName();
// listNames.push(input);

// while (input != voldemort) {  
//   input = validateName();
//   listNames.push(input);
// }

// console.log("Listado nombres ingresados: " + listNames);

// Actividad 5 - Comprando Productos
// Solicitar al usuario un (1) número de forma consecutiva, hasta que se ingrese “ESC”. Generar una única salida compuesta por los siguientes productos, según el valor ingresado en cada ciclo:
// “Tomate” si es 1.
// “Papa” si es 2.
// “Carne” si es 3.
// “Pollo” si es 4.

// console.log("Actividad 3 - Carga de Productos");

// let inputStringUser: string = "";

// const validateInputNumber = (): number => {
//   let valueInputUser: number;

//   do {
//     inputStringUser = readlineSync.question("Ingrese un número (si desea finalizar la carga ingrese 'ESC'): ").toLocaleLowerCase();

//     if (inputStringUser === "esc") {
//       return 0;
//     }

//     valueInputUser = parseInt(inputStringUser);

//     if (inputStringUser.trim() == "" || valueInputUser < 0 || isNaN(valueInputUser)) {
//       console.log("Por favor ingrese un valor numerico para continuar o 'esc' para finalizar.");
//       console.log("\n");
//     }
//   } while (inputStringUser.trim() == "" || valueInputUser < 0 || isNaN(valueInputUser));

//   return valueInputUser;
// }

// let inputNumber: number = validateInputNumber();
// let listProducts: string[] = [];

// if (inputStringUser != "esc" && inputNumber >= 1) {
//   while (inputStringUser != 'esc' && inputNumber >= 1) {
//     switch (inputNumber) {
//       case 1: 
//         console.log("Producto seleccionado 'Tomate', se ingreso al carrito correctamente.");
//         listProducts.push("Tomate");
//       break;
    
//       case 2: 
//         console.log("Producto seleccionado 'Papa', se ingreso al carrito correctamente.");
//         listProducts.push("Papa");
//       break;
    
//       case 3: 
//         console.log("Producto seleccionado 'Carne', se ingreso al carrito correctamente.");
//         listProducts.push("Carne");
//       break;
    
//       case 4: 
//         console.log("Producto seleccionado 'Pollo', se ingreso al carrito correctamente.");
//         listProducts.push("Pollo");
//       break;
    
//       default: console.log("No se posee un producto con el ID designado. Lo lamentamos :c");
//       break; 
//     }

//     inputNumber = validateInputNumber();
//   } 

//   console.log("Lista de productos seleccionados: " + listProducts);
// } else {
//   console.log("Proceso finalizado. No se ingreso ningun producto.");
// }